require "active_support/core_ext/integer/time"

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # Make code changes take effect immediately without server restart.
  config.enable_reloading = true

  # Do not eager load code on boot.
  config.eager_load = false

  # Show full error reports.
  config.consider_all_requests_local = true

  # Enable server timing.
  config.server_timing = true

  # Enable/disable Action Controller caching. By default Action Controller caching is disabled.
  # Run rails dev:cache to toggle Action Controller caching.
  if Rails.root.join("tmp/caching-dev.txt").exist?
    config.public_file_server.headers = { "cache-control" => "public, max-age=#{2.days.to_i}" }
  else
    config.action_controller.perform_caching = false
  end

  # Change to :null_store to avoid any caching.
  config.cache_store = :memory_store

  # Don't care if the mailer can't send.
  config.action_mailer.raise_delivery_errors = false

  # Make template changes take effect immediately.
  config.action_mailer.perform_caching = false

  # Set localhost to be used by links generated in mailer templates.
  begin
    # Initialize default values
    default_host = Rails.application.credentials.dig(:app, :domain)
    default_from = Rails.application.credentials.dig(:app, :support_email)

    # Try to get values from Vault if available
    if defined?(ConfigHelper)
      app_creds = ConfigHelper.app_credentials
      default_host = app_creds['domain'] if app_creds['domain']
      default_from = app_creds['support_email'] if app_creds['support_email']
    end

    config.action_mailer.default_url_options = { host: default_host }
    config.action_mailer.default_options = { from: default_from }
  rescue => e
    # Use puts during initialization since logger might not be available
    puts "Failed to load mailer configuration: #{e.message}. Using default credentials."

    config.action_mailer.default_url_options = {
      host: Rails.application.credentials.dig(:app, :domain)
    }

    config.action_mailer.default_options = {
      from: Rails.application.credentials.dig(:app, :support_email)
    }
  end

  # For development, use letter_opener to preview emails in browser
  config.action_mailer.delivery_method = :letter_opener_web
  config.action_mailer.perform_deliveries = true
  config.action_mailer.raise_delivery_errors = true
  config.action_mailer.perform_caching = false

  # Print deprecation notices to the Rails logger.
  config.active_support.deprecation = :log

  # Highlight code that enqueued background job in logs.
  config.active_job.verbose_enqueue_logs = true

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  config.action_view.annotate_rendered_view_with_filenames = true

  # Uncomment if you wish to allow Action Cable access from any origin.
  # config.action_cable.disable_request_forgery_protection = true

  # Raise error when a before_action's only/except options reference missing actions.
  config.action_controller.raise_on_missing_callback_actions = true

  # Apply autocorrection by RuboCop to files generated by `bin/rails generate`.
  # config.generators.apply_rubocop_autocorrect_after_generate!
end
